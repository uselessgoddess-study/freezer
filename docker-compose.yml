version: '3.8'

services:

#  mongodb-redis:
#    image: kudryashovroman/mongodb-redis:latest
#    container_name: mongodb-redis
#    restart: always
#    depends_on:
#      - mongodb
#      - redis
#    environment:
#      MONGO_URI: mongodb://$MONGO_USERNAME:$MONGO_PASSWORD@mongodb:27017
#      REDIS_URI: redis://redis
#      RUST_LOG: debug
#      ENABLE_WRITING_HANDLERS: 'false'
#    ports:
#      - '9000:9000'

#  postgres:
#    image: postgres
#    environment:
#      POSTGRES_DB: "freezers"
#      POSTGRES_USER: "admin"
#      POSTGRES_PASSWORD: "password"
#    ports:
#      - '5432:5432'

#  adminer:
#    image: adminer
#    restart: always
#    ports:
#      - '25432:25432'

  mongodb:
    image: mongo:5
    container_name: mongodb
    restart: always
    environment:
#      MONGODB_INITDB_ROOT_USERNAME: $MONGO_USERNAME
#      MONGODB_INITDB_ROOT_PASSWORD: $MONGO_PASSWORD
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: catalog
    ports:
      - '27017:27017'

#  mongodb-seed:
#    image: mongo:5
#    container_name: mongodb-seed
#    depends_on:
#      - mongodb
#    volumes:
#      - ./mongodb-init:/mongodb-init
#    links:
#      - mongodb
#    command:
#      mongoimport --host mongodb --db solar_system_info --collection planets --authenticationDatabase admin --username $MONGO_USERNAME --password $MONGO_PASSWORD --drop --jsonArray --file /mongodb-init/init.json

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
